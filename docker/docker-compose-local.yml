version: '3.8'

services:
  portainer:
    image: portainer/portainer-ce:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    user: root
    ports:
      - "9090:9090"
    networks:
      - monitoring
    volumes:
      - docker_prometheus_data:/var/lib/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/var/lib/prometheus'
      - '--storage.tsdb.retention.time=150d'
      - '--storage.tsdb.retention.size=10GB'

  grafana:
    image: grafana/grafana
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3000
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./nginx-logs:/var/log/nginx
    networks:
      - monitoring

  node_exporter:
    image: prom/node-exporter
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "9100:9100"
    networks:
      - monitoring

  python-app-assignment:
    # image: python-app-assignment:latest
    image: shradha1919/python-app-assignment:1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DOCKER_URL=tcp://172.27.36.125:2375
      - PROMETHEUS_HOST="0.0.0.0"
      - PROMETHEUS_PORT="5000"
      - PROMETHEUS_URL=http://172.27.36.125:9090
      - ALERTMANAGER_URL=http://172.27.36.125:9093
      - GRAFANA_DASHBOARD_ID=fefbgmtb8gx6oe
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - monitoring

  nginx:
    image: nginx:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - monitoring

  jmeter:
    image: justb4/jmeter:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - monitoring
    volumes:
      - ./jmeter-test-plans/tests:/tests
      - /tmp/.X11-unix:/tmp/.X11-unix
    ports:
      - "1099:1099"
      - "60000:60000"
    environment:
      - DISPLAY=${DISPLAY}
    command:
      - -Djava.awt.headless=false
      - -t /tests/test_plan.jmx

networks:
  monitoring:
    driver: overlay

volumes:
  grafana_data:
  docker_prometheus_data:
    driver: local
  portainer_data:
    driver: local


#  docker stack deploy -c docker-compose.yml my_thesis